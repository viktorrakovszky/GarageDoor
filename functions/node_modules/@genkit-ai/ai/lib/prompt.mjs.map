{"version":3,"sources":["../src/prompt.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Action, defineAction, JSONSchema7 } from '@genkit-ai/core';\nimport { lookupAction } from '@genkit-ai/core/registry';\nimport z from 'zod';\nimport { DocumentData } from './document.js';\nimport { GenerateOptions } from './generate.js';\nimport {\n  GenerateRequest,\n  GenerateRequestSchema,\n  ModelArgument,\n} from './model.js';\n\nexport type PromptFn<\n  I extends z.ZodTypeAny = z.ZodTypeAny,\n  CustomOptionsSchema extends z.ZodTypeAny = z.ZodTypeAny,\n> = (input: z.infer<I>) => Promise<GenerateRequest<CustomOptionsSchema>>;\n\nexport type PromptAction<I extends z.ZodTypeAny = z.ZodTypeAny> = Action<\n  I,\n  typeof GenerateRequestSchema\n> & {\n  __action: {\n    metadata: {\n      type: 'prompt';\n    };\n  };\n};\n\nexport function isPrompt(arg: any): boolean {\n  return (\n    typeof arg === 'function' &&\n    (arg as any).__action?.metadata?.type === 'prompt'\n  );\n}\n\n/**\n * Defines and registers a prompt action. The action can be called to obtain\n * a `GenerateRequest` which can be passed to a model action. The given\n * `PromptFn` can perform any action needed to create the request such as rendering\n * a template or fetching a prompt from a database.\n *\n * @returns The new `PromptAction`.\n */\n\nexport function definePrompt<I extends z.ZodTypeAny>(\n  {\n    name,\n    description,\n    inputSchema,\n    inputJsonSchema,\n    metadata,\n  }: {\n    name: string;\n    description?: string;\n    inputSchema?: I;\n    inputJsonSchema?: JSONSchema7;\n    metadata?: Record<string, any>;\n  },\n  fn: PromptFn<I>\n): PromptAction<I> {\n  const a = defineAction(\n    {\n      actionType: 'prompt',\n      name,\n      description,\n      inputSchema,\n      inputJsonSchema,\n      metadata: { ...(metadata || { prompt: {} }), type: 'prompt' },\n    },\n    fn\n  );\n  return a as PromptAction<I>;\n}\n\nexport type PromptArgument<I extends z.ZodTypeAny = z.ZodTypeAny> =\n  | string\n  | PromptAction<I>;\n\n/**\n * This veneer renders a `PromptAction` into a `GenerateOptions` object.\n *\n * @returns A promise of an options object for use with the `generate()` function.\n */\nexport async function renderPrompt<\n  I extends z.ZodTypeAny = z.ZodTypeAny,\n  O extends z.ZodTypeAny = z.ZodTypeAny,\n  CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n>(params: {\n  prompt: PromptArgument<I>;\n  input: z.infer<I>;\n  context?: DocumentData[];\n  model: ModelArgument<CustomOptions>;\n  config?: z.infer<CustomOptions>;\n}): Promise<GenerateOptions<O, CustomOptions>> {\n  let prompt: PromptAction<I>;\n  if (typeof params.prompt === 'string') {\n    prompt = await lookupAction(`/prompt/${params.prompt}`);\n  } else {\n    prompt = params.prompt as PromptAction<I>;\n  }\n  const rendered = (await prompt(\n    params.input\n  )) as GenerateRequest<CustomOptions>;\n  return {\n    model: params.model,\n    config: { ...(rendered.config || {}), ...params.config },\n    history: rendered.messages.slice(0, rendered.messages.length - 1),\n    prompt: rendered.messages[rendered.messages.length - 1].content,\n    context: params.context,\n    candidates: rendered.candidates || 1,\n    output: {\n      format: rendered.output?.format,\n      schema: rendered.output?.schema,\n    },\n    tools: rendered.tools || [],\n  } as GenerateOptions<O, CustomOptions>;\n}\n"],"mappings":";;;;;AAgBA,SAAiB,oBAAiC;AAClD,SAAS,oBAAoB;AA0BtB,SAAS,SAAS,KAAmB;AA3C5C;AA4CE,SACE,OAAO,QAAQ,gBACd,eAAY,aAAZ,mBAAsB,aAAtB,mBAAgC,UAAS;AAE9C;AAWO,SAAS,aACd;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAOA,IACiB;AACjB,QAAM,IAAI;AAAA,IACR;AAAA,MACE,YAAY;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,UAAU,iCAAM,YAAY,EAAE,QAAQ,CAAC,EAAE,IAA/B,EAAmC,MAAM,SAAS;AAAA,IAC9D;AAAA,IACA;AAAA,EACF;AACA,SAAO;AACT;AAWA,SAAsB,aAIpB,QAM6C;AAAA;AA5G/C;AA6GE,QAAI;AACJ,QAAI,OAAO,OAAO,WAAW,UAAU;AACrC,eAAS,MAAM,aAAa,WAAW,OAAO,MAAM,EAAE;AAAA,IACxD,OAAO;AACL,eAAS,OAAO;AAAA,IAClB;AACA,UAAM,WAAY,MAAM;AAAA,MACtB,OAAO;AAAA,IACT;AACA,WAAO;AAAA,MACL,OAAO,OAAO;AAAA,MACd,QAAQ,kCAAM,SAAS,UAAU,CAAC,IAAO,OAAO;AAAA,MAChD,SAAS,SAAS,SAAS,MAAM,GAAG,SAAS,SAAS,SAAS,CAAC;AAAA,MAChE,QAAQ,SAAS,SAAS,SAAS,SAAS,SAAS,CAAC,EAAE;AAAA,MACxD,SAAS,OAAO;AAAA,MAChB,YAAY,SAAS,cAAc;AAAA,MACnC,QAAQ;AAAA,QACN,SAAQ,cAAS,WAAT,mBAAiB;AAAA,QACzB,SAAQ,cAAS,WAAT,mBAAiB;AAAA,MAC3B;AAAA,MACA,OAAO,SAAS,SAAS,CAAC;AAAA,IAC5B;AAAA,EACF;AAAA;","names":[]}